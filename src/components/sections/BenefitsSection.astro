
---
import benefitsData from '../../data/benefits.json';
---

<section class="relative py-20 lg:py-32 overflow-hidden" id="beneficios" style="background-color: #0e0e10;">

  <div class="absolute inset-0 opacity-5">
    <div class="absolute inset-0 bg-center" style="background-image: url('data:image/svg+xml;utf8,<svg width=40 height=40 viewBox=0 0 40 40 xmlns=http://www.w3.org/2000/svg><g fill=%23e04a36 fill-opacity=0.1><path d=M20 20.5V18H0v-2h20v-2.5L23.5 16l-3.5 2.5z /></g></svg>');"></div>
  </div>

  <div class="relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">

    <div class="text-center mb-16">
      <h2 class="text-4xl md:text-5xl lg:text-6xl font-bold mb-6" style="color: #fefefe;">
        {benefitsData.header.title}
        <span class="block" style="color: #fe6b24;">{benefitsData.header.titleHighlight}</span>
      </h2>
      <p class="text-xl max-w-3xl mx-auto" style="color: #d4d4d4;">
        {benefitsData.header.description}
      </p>
    </div>


    <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8 lg:gap-12">
      {benefitsData.benefits.map((benefit) => (
        <div class="benefit-card group">
          <div class="benefit-icon mb-6">
            <div class="w-20 h-20 rounded-3xl flex items-center justify-center transition-all duration-300" style="background-color: rgba(254, 107, 36, 0.1);">
              <svg class="w-10 h-10 transition-transform duration-300" style="color: #fe6b24;" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={benefit.iconPath} />
              </svg>
            </div>
          </div>
          <div class="benefit-content">
            <h3 class="text-2xl font-bold mb-4 transition-colors duration-300" style="color: #fefefe;">
              {benefit.title}
            </h3>
            <p class="leading-relaxed transition-colors duration-300" style="color: #a3a3a3;">
              {benefit.description}
            </p>
          </div>
        </div>
      ))}
    </div>


    <div class="mt-20 grid grid-cols-2 lg:grid-cols-4 gap-8">
      {benefitsData.stats.map((stat) => (
        <div class="text-center stats-item">
          <div class="text-4xl lg:text-5xl font-bold mb-2" style="color: #fe6b24;">{stat.value}</div>
          <div class="text-sm lg:text-base" style="color: #d4d4d4;">{stat.label}</div>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  .benefit-card {
    position: relative;
    padding: 2.5rem;
    background: linear-gradient(145deg, #1a1a1a, #0e0e10);
    backdrop-filter: blur(8px);
    border-radius: 2rem;
    border: 1px solid #262626;
    transition: all 0.4s ease;
    overflow: hidden;
  }
  
  .benefit-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, transparent, #fe6b24, transparent);
    border-radius: 2rem 2rem 0 0;
    opacity: 0;
    transition: opacity 0.4s ease;
  }
  
  .benefit-card:hover {
    transform: translateY(-12px);
    border-color: #fe6b24;
    box-shadow: 0 25px 50px -12px rgba(254, 107, 36, 0.15);
  }
  
  .benefit-card:hover::before {
    opacity: 1;
  }
  
  .benefit-card:hover .benefit-icon svg {
    transform: scale(1.2) rotate(10deg);
    color: #fe6b24 !important;
  }
  
  .benefit-card:hover h3 {
    color: #fe6b24 !important;
  }
  
  .benefit-card:hover p {
    color: #d4d4d4 !important;
  }
  
  .stats-item {
    opacity: 0;
    transform: translateY(20px);
  }
</style>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  
  gsap.registerPlugin(ScrollTrigger);
  
  document.addEventListener('DOMContentLoaded', () => {

    gsap.fromTo(".benefit-card", {
      y: 80,
      opacity: 0,
      scale: 0.9
    }, {
      y: 0,
      opacity: 1,
      scale: 1,
      duration: 0.8,
      ease: "power3.out",
      stagger: 0.2,
      scrollTrigger: {
        trigger: ".benefit-card",
        start: "top 80%",
        toggleActions: "play none none reverse"
      }
    });

    gsap.to(".stats-item", {
      opacity: 1,
      y: 0,
      duration: 0.6,
      stagger: 0.1,
      scrollTrigger: {
        trigger: ".stats-item",
        start: "top 85%",
        toggleActions: "play none none reverse"
      }
    });
  });
</script>